{
  "openapi": "3.0.3",
  "info": {
    "title": "CRUD Demo API",
    "description": "API contract for CRUD Interactive Demo - Spec-Driven Development",
    "version": "1.0.0",
    "contact": {
      "name": "Demo Developer",
      "email": "demo@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local development server"
    },
    {
      "url": "https://crud-demo.vercel.app/api",
      "description": "Production deployment"
    }
  ],
  "tags": [
    {
      "name": "items",
      "description": "CRUD operations for demo items"
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "tags": ["items"],
        "summary": "Get all items",
        "description": "Retrieve all items with optional filtering and sorting",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["demo", "example", "sample", "test"]
            },
            "description": "Filter by category"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["draft", "active", "completed", "archived"]
            },
            "description": "Filter by status"
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["low", "medium", "high", "urgent"]
            },
            "description": "Filter by priority"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["name", "createdAt", "updatedAt", "priority"]
            },
            "description": "Sort field"
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["items"],
        "summary": "Create a new item",
        "description": "Create a new item with the provided data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "tags": ["items"],
        "summary": "Get item by ID",
        "description": "Retrieve a specific item by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Item ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Item found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadItemResponse"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["items"],
        "summary": "Update item by ID",
        "description": "Update an existing item with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Item ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["items"],
        "summary": "Delete item by ID",
        "description": "Delete an existing item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Item ID"
          },
          {
            "name": "confirm",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "description": "Confirmation flag for deletion"
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - confirmation required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Item not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Item": {
        "type": "object",
        "required": ["id", "name", "category", "priority", "status", "createdAt", "updatedAt"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the item"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Item name"
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "description": "Item description"
          },
          "category": {
            "type": "string",
            "enum": ["demo", "example", "sample", "test"],
            "description": "Item category"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "urgent"],
            "description": "Item priority"
          },
          "status": {
            "type": "string",
            "enum": ["draft", "active", "completed", "archived"],
            "description": "Item status"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "CreateItemRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Item name"
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "description": "Item description"
          },
          "category": {
            "type": "string",
            "enum": ["demo", "example", "sample", "test"],
            "default": "demo",
            "description": "Item category"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "urgent"],
            "default": "medium",
            "description": "Item priority"
          }
        }
      },
      "UpdateItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Item name"
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "description": "Item description"
          },
          "category": {
            "type": "string",
            "enum": ["demo", "example", "sample", "test"],
            "description": "Item category"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "urgent"],
            "description": "Item priority"
          },
          "status": {
            "type": "string",
            "enum": ["draft", "active", "completed", "archived"],
            "description": "Item status"
          }
        }
      },
      "CreateItemResponse": {
        "type": "object",
        "required": ["item", "success", "message"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Item"
          },
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          }
        }
      },
      "ReadItemsResponse": {
        "type": "object",
        "required": ["items", "total", "success"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "description": "Array of items"
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "description": "Total number of items"
          },
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          }
        }
      },
      "ReadItemResponse": {
        "type": "object",
        "required": ["item", "success"],
        "properties": {
          "item": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Item"
              },
              {
                "type": "null"
              }
            ],
            "description": "Item object or null if not found"
          },
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Response message (optional)"
          }
        }
      },
      "UpdateItemResponse": {
        "type": "object",
        "required": ["item", "success", "message"],
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Item"
          },
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          }
        }
      },
      "DeleteItemResponse": {
        "type": "object",
        "required": ["success", "message", "deletedItemId"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "deletedItemId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the deleted item"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["message", "code"],
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "details": {
            "type": "object",
            "description": "Additional error details"
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "required": ["message", "code", "errors"],
        "properties": {
          "message": {
            "type": "string",
            "description": "Validation error message"
          },
          "code": {
            "type": "string",
            "enum": ["VALIDATION_ERROR"],
            "description": "Error code"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["field", "message"],
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Field name with error"
                },
                "message": {
                  "type": "string",
                  "description": "Field-specific error message"
                }
              }
            },
            "description": "Array of field validation errors"
          }
        }
      }
    }
  }
}
